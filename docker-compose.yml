version: '3.8'

services:
  # Web Server
  web:
    build: .
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./uploads:/var/www/html/uploads
      - ./cache:/var/www/html/cache
      - ./logs:/var/www/html/logs
    depends_on:
      - mysql
      - redis
    environment:
      - DB_HOST=mysql
      - DB_NAME=ai_code_bot
      - DB_USER=root
      - DB_PASS=password123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - ai-code-bot-network
    restart: unless-stopped

  # MySQL Database
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password123
      - MYSQL_DATABASE=ai_code_bot
      - MYSQL_USER=aicodebot
      - MYSQL_PASSWORD=password123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ai-code-bot-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-code-bot-network
    restart: unless-stopped

  # PHP-FPM
  php-fpm:
    build:
      context: .
      dockerfile: Dockerfile.php-fpm
    volumes:
      - ./:/var/www/html
      - ./uploads:/var/www/html/uploads
      - ./cache:/var/www/html/cache
      - ./logs:/var/www/html/logs
    depends_on:
      - mysql
      - redis
    environment:
      - DB_HOST=mysql
      - DB_NAME=ai_code_bot
      - DB_USER=root
      - DB_PASS=password123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - ai-code-bot-network
    restart: unless-stopped

  # Nginx
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./uploads:/var/www/html/uploads
    depends_on:
      - php-fpm
    networks:
      - ai-code-bot-network
    restart: unless-stopped

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    networks:
      - ai-code-bot-network
    restart: unless-stopped

  # MailHog (Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - ai-code-bot-network
    restart: unless-stopped

  # Monitoring
  monitoring:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - ai-code-bot-network
    restart: unless-stopped

  # Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - monitoring
    networks:
      - ai-code-bot-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  ai-code-bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 